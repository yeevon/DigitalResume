# FROM node:18-alpine

# # Set working directory
# WORKDIR /app

# # Install dependencies
# COPY package.json package-lock.json ./
# RUN npm install

# # Download Tailwind CSS CLI
# RUN curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64 \
#     && chmod +x tailwindcss-linux-x64 \
#     && mv tailwindcss-linux-x64 /usr/local/bin/tailwindcss

# # Copy application files
# COPY . .

# # Build Tailwind CSS
# RUN tailwindcss -i ./src/input.css -o ./dist/output.css –minify –watch --poll tail -f /dev/null

# FROM node:18-alpine

# # Install curl
# RUN apk add --no-cache curl

# # Set working directory
# WORKDIR /app

# # Install dependencies
# COPY package.json package-lock.json ./
# RUN npm install

# # Download Tailwind CSS CLI
# RUN curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64 \
#     && chmod +x tailwindcss-linux-x64 \
#     && mv tailwindcss-linux-x64 /usr/local/bin/tailwindcss

# # Copy application files
# COPY . .

# # Set the default command to run Tailwind CSS in watch mode
# CMD ["tailwindcss", "-i", "./src/input.css", "-o", "./dist/output.css", "--watch", "--poll"]

FROM node:18-alpine

# Set working directory
WORKDIR /app

# Copy package files and install dependencies (including tailwindcss)
COPY package.json package-lock.json ./
RUN npm install

# Copy the rest of your app
COPY . .

# Set the default command
CMD ["npx", "tailwindcss", "-i", "./core/static/input.css", "-o", "./core/static/output.css", "--watch", "--poll"]